{"ast":null,"code":"var _jsxFileName = \"/Users/kuh/Desktop/git_repo/js_study/inflearn_react_express/study_5 (redux)/redux_example/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport reducers from './reducers/index';\nimport * as action from './actions/ActionIndex';\nconst store = createStore(reducers); // subscribe: 스토어에 state 가 변경될때마다 실행된다.\n// subscribe 의 반환형은 unsubscribe이기 떄문에 반환형을 실행해주면 notify가 멈춘다.\n//store.subscribe(()=>{console.log('변경')})   // 기본형 주석\n\nconst unSubscribe = store.subscribe(() => {\n  console.log('변경');\n});\nconsole.log(store.getState());\nstore.dispatch(action.decrement());\nstore.dispatch(action.increament());\nstore.dispatch(action.decrement());\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/kuh/Desktop/git_repo/js_study/inflearn_react_express/study_5 (redux)/redux_example/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","reducers","action","store","unSubscribe","subscribe","console","log","getState","dispatch","decrement","increament","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AAGA,MAAMC,KAAK,GAAGH,WAAW,CAACC,QAAD,CAAzB,C,CAEA;AACA;AACA;;AAEA,MAAMG,WAAW,GAAGD,KAAK,CAACE,SAAN,CAAgB,MAAI;AAACC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAAkB,CAAvC,CAApB;AAEAD,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAN,EAAZ;AAEAL,KAAK,CAACM,QAAN,CAAeP,MAAM,CAACQ,SAAP,EAAf;AACAP,KAAK,CAACM,QAAN,CAAeP,MAAM,CAACS,UAAP,EAAf;AACAR,KAAK,CAACM,QAAN,CAAeP,MAAM,CAACQ,SAAP,EAAf;AAKAb,QAAQ,CAACe,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport reducers from './reducers/index'\nimport * as action from './actions/ActionIndex'\n\n\nconst store = createStore(reducers);\n\n// subscribe: 스토어에 state 가 변경될때마다 실행된다.\n// subscribe 의 반환형은 unsubscribe이기 떄문에 반환형을 실행해주면 notify가 멈춘다.\n//store.subscribe(()=>{console.log('변경')})   // 기본형 주석\n\nconst unSubscribe = store.subscribe(()=>{console.log('변경')});\n\nconsole.log(store.getState())\n\nstore.dispatch(action.decrement());\nstore.dispatch(action.increament());\nstore.dispatch(action.decrement());\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}