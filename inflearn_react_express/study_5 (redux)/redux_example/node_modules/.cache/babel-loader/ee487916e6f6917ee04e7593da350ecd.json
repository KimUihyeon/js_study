{"ast":null,"code":"var _jsxFileName = \"/Users/kuh/Desktop/git_repo/js_study/inflearn_react_express/study_5 (redux)/redux_example/src/components/Counter.js\";\nimport React from 'react';\nimport Valus from './Valus';\nimport Control from './Control';\nimport { connect, bindActionCreators } from 'react-redux';\nimport * as actions from '../actions/ActionIndex';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Valus, {\n      number: this.props.number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(Control, {\n      onPlus: this.props.handleIncrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nCounter.dafaultProps = {};\n\nconst mapStateToProps = state => {\n  // 여기서 state는 components state랑 다름.!\n  return {\n    number: state.counter.number,\n    color: state.ui.color\n  };\n};\n\nconst mapDispetchToProps = dispetch => {\n  // return bindActionCreators(actions, dispetch); // 자동으로 아래껄 세팅해준다.\n  return {\n    handleIncrement: () => {\n      dispetch(actions.increament());\n    },\n    handleDecrement: () => {\n      dispetch(actions.decrement());\n    },\n    handleSetColor: color => {\n      dispetch(actions.setColor(color));\n    }\n  };\n}; /// connect() 는 리덕스에 컨포넌트를 연결해주는 함수를 리턴 해주는 함수다 .\n// connect() ( 컨포넌트 명)\n\n\nexport default connect(mapStateToProps, mapDispetchToProps)(Counter);","map":{"version":3,"sources":["/Users/kuh/Desktop/git_repo/js_study/inflearn_react_express/study_5 (redux)/redux_example/src/components/Counter.js"],"names":["React","Valus","Control","connect","bindActionCreators","actions","Counter","Component","constructor","props","render","number","handleIncrement","dafaultProps","mapStateToProps","state","counter","color","ui","mapDispetchToProps","dispetch","increament","handleDecrement","decrement","handleSetColor","setColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,aAA5C;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;AAGA,MAAMC,OAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAZkC;;AAgBvCN,OAAO,CAACO,YAAR,GAAuB,EAAvB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAU;AAAE;AAChC,SAAO;AACHJ,IAAAA,MAAM,EAAGI,KAAK,CAACC,OAAN,CAAcL,MADpB;AAEHM,IAAAA,KAAK,EAAGF,KAAK,CAACG,EAAN,CAASD;AAFd,GAAP;AAIH,CALD;;AAOA,MAAME,kBAAkB,GAAIC,QAAD,IAAa;AACpC;AAEA,SAAO;AACHR,IAAAA,eAAe,EAAG,MAAM;AAACQ,MAAAA,QAAQ,CAACf,OAAO,CAACgB,UAAR,EAAD,CAAR;AAAgC,KADtD;AAEHC,IAAAA,eAAe,EAAG,MAAM;AAACF,MAAAA,QAAQ,CAACf,OAAO,CAACkB,SAAR,EAAD,CAAR;AAA+B,KAFrD;AAGHC,IAAAA,cAAc,EAAIP,KAAD,IAAW;AAACG,MAAAA,QAAQ,CAACf,OAAO,CAACoB,QAAR,CAAiBR,KAAjB,CAAD,CAAR;AAAkC;AAH5D,GAAP;AAKH,CARD,C,CAUA;AACA;;;AACA,eAAed,OAAO,CAACW,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cb,OAA7C,CAAf","sourcesContent":["import React from 'react'\nimport Valus from './Valus'\nimport Control from './Control'\nimport { connect, bindActionCreators } from 'react-redux'\nimport * as actions from '../actions/ActionIndex'\n\n\nclass Counter  extends  React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                <Valus number={this.props.number}></Valus>\n                <Control onPlus={this.props.handleIncrement}></Control>\n            </div>\n        )\n    }\n}\n\n\nCounter.dafaultProps = {}\n\nconst mapStateToProps = (state) =>{ // 여기서 state는 components state랑 다름.!\n    return {\n        number : state.counter.number,\n        color : state.ui.color\n    }\n}\n\nconst mapDispetchToProps = (dispetch) =>{\n    // return bindActionCreators(actions, dispetch); // 자동으로 아래껄 세팅해준다.\n\n    return {\n        handleIncrement : () => {dispetch(actions.increament()) },\n        handleDecrement : () => {dispetch(actions.decrement()) },\n        handleSetColor : (color) => {dispetch(actions.setColor(color))}\n    }\n}\n\n/// connect() 는 리덕스에 컨포넌트를 연결해주는 함수를 리턴 해주는 함수다 .\n// connect() ( 컨포넌트 명)\nexport default connect(mapStateToProps, mapDispetchToProps)(Counter);"]},"metadata":{},"sourceType":"module"}